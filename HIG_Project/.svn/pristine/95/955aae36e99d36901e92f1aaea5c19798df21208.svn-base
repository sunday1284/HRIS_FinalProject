package kr.or.ddit.salary.service;

import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kr.or.ddit.mybatis.mappers.salary.SalaryMapper;
import kr.or.ddit.salary.vo.AllowanceCodeVO;
import kr.or.ddit.salary.vo.AllowanceVO;
import kr.or.ddit.salary.vo.DeductionCodeVO;
import kr.or.ddit.salary.vo.DeductionVO;
import kr.or.ddit.salary.vo.SalaryVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class SalaryServiceImpl implements SalaryService {

	@Autowired
	private SalaryMapper mapper;
	
	@Override
	public List<SalaryVO> salaryList(String payYear, String payMonth) {
		return mapper.salaryList(payYear,payMonth);
	}

	@Override
	public SalaryVO salarySelected(String empId,int payYear, int payMonth) {
		return mapper.salarySelected(empId,payYear,payMonth);
	}

	@Override
	public List<AllowanceCodeVO> AllowanceList() {
		return mapper.AllowanceList();
	}

	@Override
	public List<DeductionCodeVO> DeductionList() {
		return mapper.DeductionList();
	}

	@Override
	public boolean InsertSalary(int payYear, int payMonth) {
		return mapper.InsertSalary(payYear, payMonth)>0;
	}

	@Override
	public boolean InsertDeducation(int payYear, int payMonth) {
		return mapper.InsertDeducation(payYear,payMonth)>0;
	}

	@Override
	public SalaryVO salaryInfo(String payYear, String payMonth) {
		
		log.info("체크 {} {}",payYear, payMonth);
//	    int monthInt = Integer.parseInt(payMonth); // 
	    String dateSelect = String.format("%s-%s-01", payYear, payMonth);
	    log.info("체킁2 {}", dateSelect);
	    return mapper.salaryInfo(payYear, payMonth, dateSelect); //  순서도 올바름
	}

	@Override
	public int InsertAllowance(int payYear, int payMonth) {
		
//		String date = String.format("%s-%02d-01", payYear, payMonth);
//		log.debug("String.format : {}", date);
//		log.info("String.format : {}", date);
		
		return mapper.InsertAllowance(payYear, payMonth);
	}

	@Override
	public int deducationTotalUpdate(int payYear, int payMonth) {
		return mapper.deducationTotalUpdate(payYear, payMonth);
	}

	@Override
	public int allowanceTotalUpdate(int payYear, int payMonth) {
		return mapper.allowanceTotalUpdate(payYear, payMonth);
	}

	@Override
	public int salaryTotalAmountUpdate(int payYear, int payMonth) {
		return mapper.salaryTotalAmountUpdate(payYear, payMonth);
	}

	@Override
	public List<SalaryVO> SalarySummaryByMonth() {
		return mapper.SalarySummaryByMonth();
	}

	@Override
	public SalaryVO salaryInsertEx(int payYear, int payMonth) {
		return mapper.salaryInsertEx(payYear, payMonth);
	}


	@Override
	public List<SalaryVO> departMentAvgSalry(String payYear, String payMonth) {
		return mapper.departMentAvgSalry(payYear,payMonth);
	}

	@Override
	public List<SalaryVO> rankAvgSalary(String payYear, String payMonth) {
		return mapper.rankAvgSalary(payYear,payMonth);
	}

	@Override
	public Map<String, String> getPayStatus(String empId, Long salaryId) {
		return mapper.getPayStatus(empId, salaryId);
	}

	@Override
	public int togglePayStatus(String empId, Long salaryId) {
		return mapper.togglePayStatus(empId, salaryId);
	}

	@Override
	public SalaryVO salarySelectedSummaryMonth(int payYear, int payMonth) {
		return mapper.salarySelectedSummaryMonth(payYear, payMonth);
	}

//	@Override
//	public List<SalaryVO> getSalaryList(int payYear, int payMonth) {
//		return mapper.getSalaryList(payYear, payMonth);
//	}

//	@Override
//	public List<SalaryVO> finalSalaryList() {
//		return mapper.finalSalaryList();
//	}

	@Override
	public int togglePayRequest(String empId, Long salaryId) {
		return mapper.togglePayRequest(empId, salaryId);
	}


}
