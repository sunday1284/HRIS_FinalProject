<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="kr.or.ddit.mybatis.mappers.evaluation.EvaluationDashboardMapper">
	
	<resultMap type="EvaluationDashboardVO" id="evaluationDashboardResultMap" autoMapping="true">
		<id property="" column=""/>
	</resultMap>
	
	<!-- 
	  1. 부서 + 팀 단위의 평가 진행 현황 조회
	  - 평가 대상자 수 (targetCount)
	  - 완료 수 (completedCount)
	  - 미완료 수 (notCompletedCount)
	  - 완료율 (%) (completionRate)
	-->
	<select id="getDepartmentTeamEvaluationStatus" resultType="EvaluationDashboardVO">
		SELECT
            D.DEPARTMENT_NAME,
            T.TEAM_NAME,
            T.TEAM_ID AS teamId,
            COUNT(*) AS targetCount,
            COALESCE(SUM(CASE WHEN EC.EVALUATION_STATUS = 'Y' THEN 1 ELSE 0 END), 0) AS completedCount,
			COALESCE(SUM(CASE WHEN EC.EVALUATION_STATUS IS NULL OR EC.EVALUATION_STATUS != 'Y' THEN 1 ELSE 0 END), 0) AS notCompletedCount,
            ROUND(
                SUM(CASE WHEN EC.EVALUATION_STATUS = 'Y' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 1
            ) AS completionRate
        FROM EVALUATION_CANDIDATE EC
        JOIN EMPLOYEE E ON EC.EMP_ID = E.EMP_ID
        JOIN TEAM T ON E.TEAM_ID = T.TEAM_ID
        JOIN DEPARTMENT D ON T.DEPARTMENT_ID = D.DEPARTMENT_ID
        WHERE EC.IS_TARGET = 'Y'
        <if test="evaluationYear != null and evaluationYear != ''">
            AND EC.EVALUATION_YEAR = #{evaluationYear}
        </if>
        <if test="halfYear != null and halfYear != ''">
            AND EC.HALF_YEAR = #{halfYear}
        </if>
        GROUP BY D.DEPARTMENT_NAME, T.TEAM_NAME, T.TEAM_ID
        ORDER BY D.DEPARTMENT_NAME, T.TEAM_NAME
	</select>
	
	<!-- 
	  2. 전체 평가 진행 요약 통계
	  - 총 평가 대상자 수
	  - 완료 수 / 미완료 수 / 완료율
	-->
	<select id="getEvaluationSummary" resultType="EvaluationDashboardSummaryVO">
		SELECT
            COUNT(*) AS totalTarget,
            COALESCE(SUM(CASE WHEN EC.EVALUATION_STATUS = 'Y' THEN 1 ELSE 0 END), 0) AS completed,
			COALESCE(SUM(CASE WHEN EC.EVALUATION_STATUS IS NULL OR EC.EVALUATION_STATUS != 'Y' THEN 1 ELSE 0 END), 0) AS notCompleted,
            ROUND(
                SUM(CASE WHEN EC.EVALUATION_STATUS = 'Y' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 1
            ) AS completionRate
        FROM EVALUATION_CANDIDATE EC
        WHERE EC.IS_TARGET = 'Y'
        <if test="evaluationYear != null and evaluationYear != ''">
            AND EC.EVALUATION_YEAR = #{evaluationYear}
        </if>
        <if test="halfYear != null and halfYear != ''">
            AND EC.HALF_YEAR = #{halfYear}
        </if>		
	</select>
	
	<!-- 
	  3. 부서별 평가 완료/미완료 차트용 데이터
	  - Map 타입으로 반환
	  - 부서별 완료 수 / 미완료 수 반환
	-->
	<select id="getDepartmentEvaluationChart" resultType="Map">
		SELECT
		    D.DEPARTMENT_NAME,
		    COALESCE(SUM(CASE WHEN EC.EVALUATION_STATUS = 'Y' THEN 1 ELSE 0 END), 0) AS completedCount,
       		COALESCE(SUM(CASE WHEN EC.EVALUATION_STATUS IS NULL OR EC.EVALUATION_STATUS != 'Y' THEN 1 ELSE 0 END), 0) AS notCompletedCount
		FROM EVALUATION_CANDIDATE EC
		LEFT JOIN EMPLOYEE E ON EC.EMP_ID = E.EMP_ID
		LEFT JOIN TEAM T ON E.TEAM_ID = T.TEAM_ID
		LEFT JOIN DEPARTMENT D ON T.DEPARTMENT_ID = D.DEPARTMENT_ID
		WHERE EC.IS_TARGET = 'Y'
		<if test="evaluationYear != null and evaluationYear != ''">
		    AND EC.EVALUATION_YEAR = #{evaluationYear}
		</if>
		<if test="halfYear != null and halfYear != ''">
		    AND EC.HALF_YEAR = #{halfYear}
		</if>
		GROUP BY D.DEPARTMENT_NAME
	
	</select>
	
	<!-- 
	  4. 부서별 통계 요약 (대시보드 카드 또는 테이블용)
	  - 평가 대상, 완료, 미완료, 완료율 포함
	-->
	<select id="getDepartmentSummary" resultType="EvaluationDepartmentSummaryVO">
		SELECT
	        D.DEPARTMENT_NAME AS departmentName,
	        COUNT(*) AS targetCount,
	        COALESCE(SUM(CASE WHEN EC.EVALUATION_STATUS = 'Y' THEN 1 ELSE 0 END), 0) AS completedCount,
	        COALESCE(SUM(CASE WHEN EC.EVALUATION_STATUS IS NULL OR EC.EVALUATION_STATUS != 'Y' THEN 1 ELSE 0 END), 0) AS notCompletedCount,
	        ROUND(
	            SUM(CASE WHEN EC.EVALUATION_STATUS = 'Y' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 1
	        ) AS completionRate
	    FROM EVALUATION_CANDIDATE EC
	    JOIN EMPLOYEE E ON EC.EMP_ID = E.EMP_ID
	    JOIN TEAM T ON E.TEAM_ID = T.TEAM_ID
	    JOIN DEPARTMENT D ON T.DEPARTMENT_ID = D.DEPARTMENT_ID
	    WHERE EC.IS_TARGET = 'Y'
	    <if test="evaluationYear != null and evaluationYear != ''">
	        AND EC.EVALUATION_YEAR = #{evaluationYear}
	    </if>
	    <if test="halfYear != null and halfYear != ''">
	        AND EC.HALF_YEAR = #{halfYear}
	    </if>
	    GROUP BY D.DEPARTMENT_NAME
	    ORDER BY D.DEPARTMENT_NAME
	</select>
	
	<!-- 
	  5. 미제출자 목록 조회
	  - 평가가 완료되지 않은 대상자만 조회
	  - 연도/반기/팀 조건에 따라 필터링
	  - 모달 또는 별도 화면에서 사용 가능
	-->
	<select id="getUnsubmittedList" resultType="UnsubmittedEmployeeVO">
	    SELECT
	        E.EMP_ID AS empId,
	        E.NAME AS name,
	        T.TEAM_NAME AS teamName,
	        T.TEAM_ID AS teamId,
	        D.DEPARTMENT_NAME AS departmentName,
	        EC.EVALUATION_YEAR AS evaluationYear,
	        EC.HALF_YEAR AS halfYear,
	        EC.EVALUATION_STATUS AS evaluationStatus
	    FROM EVALUATION_CANDIDATE EC
	    JOIN EMPLOYEE E ON EC.EMP_ID = E.EMP_ID
	    JOIN TEAM T ON E.TEAM_ID = T.TEAM_ID
	    JOIN DEPARTMENT D ON T.DEPARTMENT_ID = D.DEPARTMENT_ID
	    WHERE EC.IS_TARGET = 'Y'
	    AND (EC.EVALUATION_STATUS IS NULL OR EC.EVALUATION_STATUS != 'Y')
	    <if test="evaluationYear != null and evaluationYear != ''">
	        AND EC.EVALUATION_YEAR = #{evaluationYear}
	    </if>
	    <if test="halfYear != null and halfYear != ''">
	        AND EC.HALF_YEAR = #{halfYear}
	    </if>
	    <if test="teamId != null and teamId != ''">
	        AND T.TEAM_ID = #{teamId, jdbcType=NUMERIC}
	    </if>
	</select>
	
</mapper>