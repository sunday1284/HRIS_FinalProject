package kr.or.ddit.evaluation.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.evaluation.service.EvaluationService;
import kr.or.ddit.evaluation.vo.EvaluationCandidateVO;
import kr.or.ddit.evaluation.vo.EvaluationTypeVO;
import kr.or.ddit.evaluation.vo.EvaluationWrapperVO;
import kr.or.ddit.security.SecurityUtil;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/evaluation")
@RequiredArgsConstructor
public class EvaluationKPIListController {

    private final EvaluationService service;
    
    // 피평가자 리스트 조회
    @GetMapping("/KPIList")
    public String getEvaluationCandidates(Model model) {
    	
        String evaluatorId = SecurityUtil.getrealUser().getEmpId(); // ✅ 수정된 부분
        log.info("✅ 평가자 ID: {}", evaluatorId);

        List<EvaluationCandidateVO> candidateList = service.getEvaluationTargets(evaluatorId);
        log.info("✅ 조회된 피평가자 수: {}", candidateList.size());

        model.addAttribute("kpiList", candidateList); // ✅ JSP와 일치하도록 변경
        
        return "tiles:evaluation/KPIList";
    }
    
    @GetMapping("/evaluationFormUI")
    public String showEvaluationForm(@RequestParam String empId,
                                     @RequestParam String year,
                                     @RequestParam String half,
                                     Model model) {
    	// 피평가자의 직급 RANK_ID 자동 조회
        String rankId = service.getRankIdByEmpId(empId); 
        
        // 🎯 직급 기준 평가 항목 조회
        List<EvaluationTypeVO> criteriaList = service.evaluationRank(rankId); 
       
        model.addAttribute("criteriaList", criteriaList);
        model.addAttribute("empId", empId);
        model.addAttribute("year", year);
        model.addAttribute("half", half);

        return "tiles:evaluation/evaluationFormUI";
    }
    
    
    // 평가 저장
    @PostMapping("/saveEvaluation")
    public String saveEvaluation(@ModelAttribute EvaluationWrapperVO wrapperVO) {
        service.saveEvaluationList(wrapperVO.getEvaluationList());
        return "redirect:/evaluation/KPIList";
    }
}
