<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>
<%@taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>

<script
	src="${pageContext.request.contextPath}/resources/js/employee/empDetail.js"></script>

<h3>직원정보 리스트</h3>
<div class="row">
	<!-- 왼쪽 카드 -->
	<div class="col-md-6">
		<div class="card h-100" style="min-height: 500px;">
			<div class="card-body">
				<div class="chart-container text-center" style="height: 100%;">
					<h4>📥 근속 연수</h4>
					<canvas id="tenure"
						style="display: block; margin: 0 auto; width: 100%; max-width: 650px; height: 500px;"></canvas>
				</div>
			</div>
		</div>
	</div>
	
	<!-- 오른쪽 카드 -->
	<div class="col-md-6">
		<div class="card h-100" style="min-height: 550px;">
			<div class="card-body">
				<div class="chart-container text-center" style="height: 100%;">
					<h4>💼 직급별 비율</h4>
					<canvas id="rankPercent"
						style="display: block; margin: 0 auto; width: 100%; max-width: 500px; height: 400px;"></canvas>
				</div>
			</div>
		</div>
	</div>
</div>

<br />
<div class="card">
	<div class="card-body">
		<table class="table1 table-striped" id="empTable">
			<thead>
				<tr>
					<th></th>
					<th>이름</th>
					<th>휴대폰</th>
					<th>이메일</th>
					<th>부서명</th>
					<th>팀명</th>
					<th>직급</th>
					<th>직책</th>
					<th>직무</th>
					<th>입사일자</th>
					<th>상세정보</th>
				</tr>
			</thead>
			<tbody>
				<c:forEach items="${empList}" var="x">
					<c:set var="fullPath" value="${x.empPath}" />
					<c:set var="startIndex"
						value="${fn:indexOf(fullPath, 'fileImages')}" />
					<c:set var="cutStart" value="${startIndex + 10}" />
					<c:set var="cutEnd" value="${fn:length(fullPath)}" />
					<c:set var="fileName"
						value="${fn:substring(fullPath, cutStart, cutEnd)}" />
					<c:set var="webPath" value="/resources/fileImages/${fileName}" />
					<tr>
						<td><img src="${pageContext.request.contextPath}${webPath}"
							style="width: 40px; height: 40px; object-fit: cover; border-radius: 4px;"
							onerror="this.onerror=null; this.src='${pageContext.request.contextPath}/resources/template/dist/assets/static/images/faces/1.jpg';"
							alt="프로필" /></td>
						<td>${x.name }</td>
						<td>${x.phoneNumber }</td>
						<td>${x.email }</td>
						<td>${x.department.departmentName }</td>
						<td>${x.team.teamName }</td>
						<td>${x.rank.rankName }</td>
						<td>${x.job.jobName }</td>
						<td>${x.position.positionName }</td>
						<td><fmt:parseDate value="${x.hireDate}"
								pattern="yyyy-MM-dd HH:mm:ss" var="parsedHireDate" /> <fmt:formatDate
								value="${parsedHireDate}" pattern="yyyy-MM-dd" /></td>
						<td>
							<button type="button" class="btn btn-primary"
								data-bs-toggle="modal" data-bs-target="#exampleModal1"
								data-emp-id="${x.empId}">선택</button>
						</td>
					</tr>
				</c:forEach>
			</tbody>
		</table>
		<br> <br>
		<div
			style="position: absolute; right: 30px; bottom: 25px; margin-top: 20px;">
			<form action="${pageContext.request.contextPath}/employee/empFormUI"
				method="get">
				<input class="btn btn-primary" type="submit" value="신규직원등록">
			</form>
		</div>

		<!-- Modal -->
		<div class="modal fade" id="exampleModal1" tabindex="-1"
			aria-labelledby="exampleModalLabel" aria-hidden="true">
			<div class="modal-dialog modal-lg modal-dialog-scrollable">
				<div class="modal-content">
					<div class="modal-header">
						<h1 class="modal-title fs-5" id="exampleModalLabel">상세보기</h1>
						<button type="button" class="btn-close" data-bs-dismiss="modal"
							aria-label="Close"></button>
					</div>
					<div class="modal-body"></div>
					<div class="modal-footer">
						<!--         <button type="button" class="btn btn-warning" id="editButton" data-mode="edit">수정</button> -->
						<!--         <button type="button" class="btn btn-success" id="saveButton" style="display: none;">저장</button> -->
						<button type="button" class="btn btn-secondary" id="closeButton"
							data-bs-dismiss="modal">닫기</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<script>
document.addEventListener('DOMContentLoaded', function() {
	const today = new Date();
	const year = today.getFullYear();
	
	$.ajax({
		url: "/employee/rankPercent",
		type: "GET",
		success: function(data) {
			rankPercent(data);		
		},
		error: function() {
			alert("요약 정보 조회 실패");
		}
	});
	
	$.ajax({
		url: "/employee/tunurePercent",
		type: "GET",
		success: function(data) {
 			tenure(data);		
		},
		error: function() {
			alert("요약 정보 조회 실패");
		}
	});
});	

	Chart.register(ChartDataLabels);
	// 직급별 인원수 비율
function rankPercent(data) {
	const total = data.reduce((sum, item) => sum + item.COUNT, 0);

	const labels = data.map(item => item.RANK_NAME);
	const percentages = data.map(item => ((item.COUNT / total) * 100).toFixed(1));
	const rawCounts = data.map(item => item.COUNT);

	const backgroundColors = [
		'#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0',
		'#9966FF', '#FF9F40', '#C9CBCF', '#5AD3D1'
	];

	new Chart(document.getElementById('rankPercent'), {
		type: 'doughnut',
		data: {
			labels: labels,
			datasets: [{
				label: '직급 비율',
				data: rawCounts,
				backgroundColor: backgroundColors,
				borderWidth: 1
			}]
		},
		options: {
			responsive: true,
			plugins: {
				legend: {
					position: 'bottom',
					labels: {
						filter: function(legendItem, chartData) {
							const index = legendItem.index;
							const value = parseFloat(chartData.datasets[0].data[index]);
							// ✅ 퍼센트 5% 미만인 항목만 레전드에 표시
							return value < 5;
						}
					}
				},
				tooltip: {
					callbacks: {
						label: function(context) {
							const index = context.dataIndex;
							const count = rawCounts[index];
							const percentage = percentages[index];
							return `\${context.label}: \${count}명`;
						}
					}
				},
				datalabels: {
					anchor: 'center',
					align: 'center',
					display: function(context) {
						const value = parseFloat(context.dataset.data[context.dataIndex]);
						return value >= 5; // ✅ 5% 이상만 라벨로
					},
					formatter: function(value, context) {
						const percent = ((value / total) * 100).toFixed(1);
						return `\${context.chart.data.labels[context.dataIndex]}\n\${percent}%`;
					},
					color: '#000',
					font: {
						weight: 'bold',
						size: 17
					}
				}
			}
		},
		plugins: [ChartDataLabels]
	});
}

//근속 연수별 인원수 비율 - 수평 막대 그래프
function tenure(deptData) {
	const labels = deptData.map(item => {
		if (item.TENUREYEAR < 0) return '입사예정';
		else return `\${item.TENUREYEAR}년`;
	});

	const data = deptData.map(item => item.COUNT);
	const total = data.reduce((sum, val) => sum + val, 0);

	const backgroundColors = [
		'#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0',
		'#9966FF', '#FF9F40', '#C9CBCF', '#5AD3D1',
		'#B39DDB', '#FFCDD2', '#AED581', '#81D4FA'
	];

	new Chart(document.getElementById('tenure'), {
		type: 'bar',
		data: {
			labels: labels,
			datasets: [{
				label: '근속 연수별 인원 수',
				data: data,
				backgroundColor: backgroundColors,
			}]
		},
		options: {
			indexAxis: 'y', // 👈 수평 막대 그래프로 만드는 핵심 옵션
			responsive: true,
			plugins: {
				legend: {
					display: false // 막대그래프는 범례 필요 없으면 끄는 것도 깔끔함
				},
				tooltip: {
					callbacks: {
						label: function(context) {
							const label = context.label || '';
							const value = context.raw;
							const percent = ((value / total) * 100).toFixed(1);
							return `\${label}: \${value}명`;
						}
					}
				},
				datalabels: {
					anchor: 'center',
					align: 'center',
					display: function(context) {
						const value = parseFloat(context.dataset.data[context.dataIndex]);
						return value >= 5; // 5명 이상일 때만 라벨 표시
					},
					formatter: function(value, context) {
						const percent = ((value / total) * 100).toFixed(1);
						const label = context.chart.data.labels[context.dataIndex];
						return `\${label}: \${percent}%`;
					},
					color: '#000',
					font: {
						weight: 'bold',
						size: 17
					}
				}
			},
			scales: {
				x: {
					beginAtZero: true,
					ticks: {
						stepSize: 5
					}
				}
			}
		},
		plugins: [ChartDataLabels]
	});
}


</script>

