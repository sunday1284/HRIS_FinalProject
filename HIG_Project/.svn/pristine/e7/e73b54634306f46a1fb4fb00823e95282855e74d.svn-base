<!-- 
 * == 개정이력(Modification Information) ==
 *   
 *   수정일      			수정자           수정내용
 *  ============   	============== =======================
 *  2025. 3. 24.     	정태우            최초 생성
 *
-->
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<style>
.table1 {
	table-layout: fixed;
	width: 100%;
}

/* 한 줄 정렬을 강제 */
.form-row {
	display: flex;
	gap: 10px;
	flex-wrap: nowrap; /* 한 줄 강제 */
	align-items: center;
	justify-content: space-between;
	width: 100%;
}

.form-group {
	flex: 1;
	min-width: 200px; /* 너무 작아지는 것 방지 */
	white-space: nowrap;
}

.form-group label {
	font-weight: bold;
}

.form-control {
	width: 100%;
	padding: 6px;
}

.card {
	margin-bottom: 20px;
	padding: 15px;
	border: 1px solid #ddd;
	border-radius: 8px;
	background-color: #f9f9f9;
}
</style>

<h3>
	<a id="toggleButton">연차보유 현황
		<h5>(접기)</h5>
	</a>
</h3>
<div id="dropdown" class="dropdown-content">
	<div class="card">
		<div class="card-body">
			<table class="table table-striped table1 " id="1t">
				<thead>
					<tr>
						<th>사번</th>
						<th>부서</th>
						<th>팀</th>
						<th>이름</th>
						<th>직급</th>
						<th>입사 일자</th>
						<th>총 연차</th>
						<th>사용 연차</th>
						<th>잔여 연차</th>
						<th>상세 보기</th>
					</tr>
				</thead>
				<tbody>
					<c:forEach items="${annualList}" var="annualVO">
						<tr>
							<td>${annualVO.empId }</td>
							<td>${annualVO.employee.department.departmentName}</td>
							<td>${annualVO.employee.team.teamName}</td>
							<td>${annualVO.employee.name }</td>
							<td>${annualVO.employee.rank.rankName }</td>
							<td>${annualVO.employee.hireDate.substring(0, 10)}
							<td>${annualVO.totalAnnual }</td>
							<td>${annualVO.usedAnnual }</td>
							<td>${annualVO.remainingAnnual }</td>
							<td><a class="btn btn-outline-info"
								href="/MyAnnual?empId=${annualVO.empId }">상세보기</a></td>
						</tr>
					</c:forEach>
				</tbody>
			</table>
		</div>
	</div>
</div>
<hr>
<jsp:include page="../annual/annualHistoryList.jsp" />
<script src="/resources/js/annaul/annualDetail.js">
	
</script>
<script>
const yearSelect = document.getElementById("year");
const currentYear = new Date().getFullYear(); // 현재 연도
const startYear = currentYear-10; // 시작 연도 (원하는 연도로 설정 가능)

for (let i = currentYear; i >= startYear; i--) {
    let option = document.createElement("option");
    option.value = i;
    option.textContent = i;
    yearSelect.appendChild(option);
}

document.addEventListener("DOMContentLoaded", function() {
	document.getElementById("toggleButton").addEventListener(
			"click",
			function() {
				let dropdown = document.getElementById("dropdown");
				if (dropdown.style.display === "none"
						|| dropdown.style.display === "") {
					dropdown.style.display = "block"; // 보이게 변경
				} else {
					dropdown.style.display = "none"; // 숨기기
				}
			});
	
	// 현재 날짜를 YYYY-MM-DD 형식으로 설정
	var today = new Date();
	var day = ("0" + today.getDate()).slice(-2);
	var month = ("0" + (today.getMonth() + 1)).slice(-2);
	var year = today.getFullYear();

	document.getElementById('date').value = year + "-" + month + "-" + day;

	var departmentList = [
		<c:forEach items="${departmentList}" var="x">
			{
				"departmentName": "${x.departmentName}",
			"departmentId": "${x.departmentId}",
			"employeeCount": "${x.departmentEmployeeCount}" // 부서별 인원수
            } <c:if test="${not empty x}">,</c:if>
		</c:forEach>
	];
	
	// 부서에 하위 팀만 보여주는 함수
	function filterTeams() {
		var selectedDept = document.getElementById("department").value;
		var teamSelect = document.getElementById("team");  // 팀 셀렉트 박스
		var teamOptions = document.querySelectorAll(".team-option");

		// 팀 셀렉트를 "전체"로 리셋
		teamSelect.value = "";
		teamOptions.forEach(function(option) {
			if (selectedDept === "" || option.dataset.departmentid === selectedDept) {
				option.style.display = "block";
			} else {
				option.style.display = "none";
			}
		});

		fetchFilteredData(); // 부서가 변경되었을 때 필터링된 데이터 가져오기
	}

	// 팀 변경 시 필터링된 데이터를 가져오는 함수
	$("#team").change(function() {
		console.log("팀변경함")
		fetchFilteredData(); // 팀 선택 시 필터링된 데이터 새로 불러오기
	});

	// 날짜 변경 시 필터링된 데이터를 가져오는 함수
	$("#date").change(function() {
		console.log("날짜 변경함")
		fetchFilteredData(); // 날짜 변경 시 데이터 새로 불러오기
	});

	// 필터링된 데이터를 가져오는 함수
	function fetchFilteredData() {
		var departmentId = $("#department").val();
		var teamId = $("#team").val();
		var date = $("#date").val();

		$.ajax({
			url: "/Annual/filter",
			type: "GET",
			data: {
				departmentId: departmentId,
				teamId: teamId,
				date: date
			},
			dataType: "json",
			success: function(data) {
// 				updateTable(data.attendanceList);
				console.log(data)
			},
			error: function() {
				alert("데이터를 불러오는 중 오류가 발생했습니다.");
			}
		});
	}
	// 테이블 업데이트
	function updateTable(data) {
		var tableBody2 = $("#2t");
		tableBody2.empty(); // 기존 데이터 삭제
		
		if (data.length === 0) {
			tableBody2.append("<tr><td class='text-center' colspan='9'>연차 사용 내역이 없습니다.</td></tr>");
			return;
		}
		
		$.each(data, function(index, x) {
		    var row =
		        "<tr>" +
			        "<td>" + (x.empId ? x.empId : "-") + "</td>" +
			        "<td>" + (x.employee.department && x.employee.department.departmentName ? x.employee.department.departmentName : "-") + "</td>" +
			        "<td>" + (x.employee.team && x.employee.team.teamName ? x.employee.team.teamName : "-") + "</td>" +
			        "<td>" + (x.employee.name ? x.employee.name : "-") + "</td>" +
			        "<td>" + (x.employee.rank && x.employee.rank.rankName ? x.employee.rank.rankName : "-") + "</td>" +
			        "<td>" + (x.annualType && x.annualType.annualName ? x.annualType.annualName : "-") + "</td>" +
			        "<td>" + (x.leaveDay ? x.leaveDay : "0") + "</td>" +
			        "<td>" + (x.leaveDate ? x.leaveDate.substring(0, 10) : "-") + "</td>" +
			        "<td>" + (x.leaveEndDate ? x.leaveEndDate.substring(0, 10) : "-") + "</td>" +
		        "</tr>";

		    tableBody2.append(row);  // 테이블 본문에 추가
		});
	}
});
</script>