package kr.or.ddit.application.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.application.service.ApplicationService;
import kr.or.ddit.application.vo.ApplicationStatusVO;
import lombok.RequiredArgsConstructor;

/**
 * 지원서 수정
 * 
 * @author KHT
 * @since 2025. 3. 18.
 * @see
 *
 * <pre>
 * << 개정이력(Modification Information) >>
 *   
 *   수정일      			수정자           수정내용
 *  -----------   	-------------    ---------------------------
 *  2025. 3. 18.     	KHT	          최초 생성
 *
 * </pre>
 */
@Controller
@RequestMapping("/recruit/applicant")
@RequiredArgsConstructor
public class ApplicationUpdateController {
	
	private final ApplicationService service;

	
//	@PostMapping("update")
//	public String recruitApplicantUpdate(
//		@RequestParam("statusId") Long statusId,
//		@RequestParam("appId") Long appId,
//		@RequestParam("currentStatus") String currentStatus,
//		@RequestParam(value="interviewDate", required=false) String interviewDate
//	) {
//		ApplicationStatusVO appStatus = new ApplicationStatusVO();
//		appStatus.setStatusId(statusId);
//		appStatus.setAppId(appId);
//		appStatus.setCurrentStatus(currentStatus);
//		appStatus.setInterviewDate(interviewDate);
//		
//		boolean isUpdated = service.modifyApplicationStatus(appStatus);
//		if(isUpdated) {
//			//지원서상태 업데이트 성공
//			ApplicationVO application = service.readApplicationDetail(appId);
//			Long recruitId = application.getRecruitId();
//			return "redirect:/recruit/applicant/list?recruitId=" + recruitId;
//		}else {
//			//지원서상태 업데이트 실패
//			return "redirect:/recruit/applicant/detail?appId=" + appId;
//		}
//		
//		
//	}

	@PostMapping("update")
    @ResponseBody
    public String recruitApplicantUpdate(
    	@RequestBody ApplicationStatusVO appStatus
    ) {
        // service를 호출하여 상태 업데이트
        boolean isUpdated = service.modifyApplicationStatus(appStatus);

        if (isUpdated) {
            // 성공 시 응답
            return "{\"message\": \"평가 업데이트 완료\"}";
        } else {
            // 실패 시 응답
            return "{\"message\": \"평가 업데이트 실패\"}";
        }
    }
	
	
	
}
