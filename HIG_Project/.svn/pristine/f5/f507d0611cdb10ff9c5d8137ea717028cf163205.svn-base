<!--
 * == 개정이력(Modification Information) ==
 *
 *   수정일      			수정자           수정내용
 *  ============   	============== =======================
 *  2025. 3. 31.     	정태우            최초 생성
 *  2025. 4. 02  		최윤식 			결재대기함 수정
-->
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>
<%@ taglib uri="http://www.springframework.org/security/tags"
	prefix="security"%>

<style>
.col-md-6 {
    display: flex;
    flex-direction: column;
    height: 100% /* 원하는 높이 */
}
.row.g-6 {
    height: 100%;
    display: flex; /* 내부 요소들 높이 균등 배분 */
}
h4{
text-align: center;
}
h3 {
    font-weight: 700;
    color: #212529;
}

/* 카드 스타일 */
.card {
    border-radius: 12px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    background-color: #ffffff;
    padding: 20px;
    transition: all 0.3s ease-in-out;
}

.card:hover {
    transform: translateY(-3px);
}

.card-header {
    background-color: #f8f9fa;
    padding: 15px;
    border-bottom: 1px solid #ddd;
    font-weight: 600;
    font-size: 16px;
}

/* 표 스타일 */
.table {
    border-radius: 8px;
    overflow: hidden;
    background-color: #ffffff;
}

.table th {
    background-color: #f8f9fa;
    color: #333;
    font-weight: 600;
    padding: 12px;
}

.table td {
    padding: 10px;
    vertical-align: middle;
}

/* 버튼 스타일 */
.btn-outline-info {
    border-radius: 8px;
    font-size: 14px;
    margin-top: 10px;
    padding: 10px 15px;
    border: 1px solid #007bff;
    color: #8aa0e0;
    transition: all 0.3s ease-in-out;
}

.btn-outline-info:hover {
    background-color: #0dcaf0;
    color: #ffffff;
}

/* 프로필 정보 */
.avatar img {
    border-radius: 50%;
    width: 60px;
    height: 60px;
    border: 3px solid #ddd;
}

/* 공지사항 및 결재 대기함 스타일 */
.section {
    background: #ffffff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.chart-container {
    flex-grow: 0; /* 남은 공간을 다 채움 */
	height: 93%;
    display: flex;
    flex-direction: column;
    justify-content: center; /* 차트를 중앙 정렬 */
    background: #ffffff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

/* 시간 정보 스타일 */
.time-info {
	display: block;
	font-size: 16px;
	color: #333; /* 글자색 */
	margin-bottom: 2px;
}

.workDuration {
	font-weight: bold;
}

/* 추가 스타일: 간격과 정렬 */
span {
	display: inline-block;
	margin-left: 20px;
}

.card {
	border-radius: 10px;
	box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
	background-color: #fff;
	padding: 20px;
}

.card-header {
	background-color: #f8f9fa;
	padding: 10px 15px;
	border-bottom: 1px solid #ddd;
	font-weight: bold;
}

.card-body {
	padding: 15px;
}

.time-info {
	font-size: 14px;
	color: #555;
}

.btn-outline-info {
	border-radius: 5px;
	font-size: 14px;
	margin-top: 10px;
	padding: 8px;
	border: 1px solid #ddd;
}

tbody {
	white-space: nowrap;
}

.scrollable-list {
    max-height: 600px; /* 원하는 높이로 조정 (예: 400px) */
    overflow-y: auto;  /* 수직 스크롤바 자동 생성 */
}

</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/css/mainpage/approverDrafts.css">

<security:authentication property="principal" var="principal" />
<div id="main" class="layout-horizontal">
	<h3 class="mb-4">👋 안녕하세요, HR 관리자님</h3>

	<div class="row mb-4">
		<div class="col-md-4">
			<div class="card text-center">
				<div class="card-header">전체 직원 수</div>
				<div class="card-body">
					<h2 id="empCount"></h2>
				</div>
			</div>
		</div>
		<div class="col-md-4">
			<div class="card text-center">
				<div class="card-header">올해 입사자</div>
				<div class="card-body">
					<h2 id="hireCount"></h2>
				</div>
			</div>
		</div>
		<div class="col-md-4">
			<div class="card text-center">
				<div class="card-header">올해 퇴사자</div>
				<div class="card-body">
					<h2 id="resignCount"></h2>
				</div>
			</div>
		</div>
	</div>
	<div class="page-content">
		<section class="row">
			<div class="col-12 col-lg-9">
				<div class="row g-6">
					<div class="col-md-6">
						<div class="chart-container">
							<h6>💼 부서별 평균 급여</h6>
							<canvas id="deptSalaryChart"></canvas>
						</div>
					</div>
					<div class="col-md-6">
						<div class="chart-container">
							<h6>📥 채용 현황</h6>
							<canvas id="recruitChart"></canvas>
						</div>
					</div>
				</div>
			</div>
			<!-- 캘린더 오른쪽 (프로필 정보) -->
			<div class="col-12 col-lg-3">
				<div class="card">
					<div class="card-body py-3 px-5">
						<div class="d-flex align-items-center">
							<div class="avatar avatar-xl">
								<img
									src="${pageContext.request.contextPath}/resources/template/dist/assets/static/images/faces/1.jpg"
									alt="Face 1">
							</div>
							<div class="ms-3 name">
								<h6>${principal.realUser.department.departmentName}
									${principal.realUser.employee.team.teamName}</h6>
								<h5 class="text-muted mb-0">${principal.realUser.empName }
									${principal.realUser.rank.rankName }</h5>

								<a href="javascript:logoutStatus()">로그아웃</a>
							</div>
						</div>
					</div>
				</div>
				<div class="card">
					<div class="card-header">
						<h4>나의 근태</h4>
					</div>
						<h6>
							<span id="time"></span>
						</h6>
						<c:if test="${not empty sessionAccount.attendance}">
							<c:forEach items="${sessionAccount.attendance}" var="attendance">
								<span id="startTime" class="time-info">출근 시간: <strong>${attendance.workStartTime}</strong></span>
								<br />
								<span id="endTime" class="time-info">퇴근 시간: <strong>${attendance.workEndTime}</strong></span>
								<br />
								<span id="workTime">일한 시간:
								<span class="workDuration"
									data-workstart="${attendance.workStartTime}"
									data-workend="${attendance.workEndTime}"> </span>
								</span>
								<br />
							</c:forEach>
						</c:if>
						<c:if test="${empty sessionAccount.attendance}">
							<span id="startTime">출근 시간 </span>
							<br />
							<span id="endTime">퇴근 시간 </span>
							<br />
							<span id="workTime">일한 시간 </span>
							<br />
						</c:if>
							<svg width="100%" height="5">
							  <line x1="0" y1="2.5" x2="100%" y2="2.5" stroke="#ccc" stroke-dasharray="4,4"/>
							</svg>

					<div class="workStatusBtnArea">
						<a class="btn btn-outline-info"
							href="${pageContext.request.contextPath}/generate-qr"
							data-bs-toggle="modal" data-bs-target="#exampleModal__">출/퇴QR</a>

						<select id="workStatusSelect" name="workStatus"
							onchange="updateWorkStatus()" class="btn btn-outline-info">
							<c:forEach items="${workStatusList}" var="workStatusVO">
								<c:if test="${workStatusVO.statusPos eq 'Y'}">
									<option value="${workStatusVO.statusId}"
										${workStatusVO.statusId eq workStatus.statusId ? 'selected' : ''}
										${workStatus.statusId eq 'STAT_03' && workStatusVO.statusId ne 'STAT_03' ? 'disabled' : ''}>
										${workStatusVO.statusName}</option>
								</c:if>
							</c:forEach>
						</select>
					</div>
				</div>
			</div>
		</section>

		<section class="row">
			<!-- 게시판 (왼쪽) -->
			<div class="col-12 col-lg-6">
				<section class="section">
						<div class="card-header">
							<h4 class="card-title">
								<a href="${pageContext.request.contextPath }/board/list"
									class="text-decoration-none text-grey">공지사항</a>
							</h4>
						</div>
						<div class="card-body">
							<div class="list-group scrollable-list">
								<!-- 데이터 테이블을 가로 스크롤 가능하게 만들기 -->
								<div class="table-responsive" style="max-width: 100%; overflow-x: auto;">
									<table id="table1" class="table table-striped datatable">
										<thead>
											<tr>
												<th data-sortable=""><a href="#"
													class="dataTable-sorter">글번호</a></th>
												<th data-sortable=""><a href="#"
													class="dataTable-sorter">카테고리</a></th>
												<th data-sortable=""><a href="#"
													class="dataTable-sorter">제목</a></th>
												<th data-sortable=""><a href="#"
													class="dataTable-sorter">작성자</a></th>
												<th data-sortable=""><a href="#"
													class="dataTable-sorter">작성일</a></th>
												<th data-sortable=""><a href="#"
													class="dataTable-sorter">조회수</a></th>
											</tr>
										</thead>
										<tbody>
											<c:choose>
												<c:when test="${not empty boardList}">
													<c:forEach items="${boardList}" var="board">
														<tr>
															<td>${board.noticeId}</td>
															<td>${board.category.categoryName}</td>
															<td><a href="javascript:void(0);"
																onclick="navigateToDetail('${board.noticeId}')">${board.title}</a>
															</td>
															<td>${board.role.roleName}</td>
															<td>${board.createdAt}</td>
															<td>${board.viewCount}</td>
														</tr>
													</c:forEach>
												</c:when>
												<c:otherwise>
													<tr>
														<td colspan="6">공지글 없음.</td>
													</tr>
												</c:otherwise>
											</c:choose>
										</tbody>
									</table>
								</div>
							</div>
						</div>
				</section>
			</div>

			<!-- 게시판 오른쪽 (appoverProcess.jsp) -->
			<div class="col-12 col-lg-6">
				<section class="section">
						<div class="card-header">
							<h4 class="card-title">
								<a href="${pageContext.request.contextPath }/approval/approverDrafts">결재대기함</a>
							</h4>
						</div>

						<div class="card-body">
							<!-- 데이터 테이블 컨트롤 -->
				           <div class="dataTable-wrapper dataTable-loading no-footer sortable searchable fixed-columns">
				               <div class="dataTable-top">
				           		</div>
				           </div>
							<div class="list-group scrollable-list">
								<!-- 데이터 테이블을 가로 스크롤 가능하게 만들기 -->
								<div class="table-responsive" style="max-width: 100%; overflow-x: auto;">
									<table class="table table-striped table" id="approvalTable">
										<thead>
											<tr>
												<th id="draft-date"><a href="#" class="dataTable-sorter">기안일</a></th>
												<th id="title"><a href="#" class="dataTable-sorter">제목</a></th>
												<th id="department"><a href="#" class="dataTable-sorter">부서</a></th>
												<th id="draftor"><a href="#" class="dataTable-sorter">기안자</a></th>
												<th id="status"><a href="#" class="dataTable-sorter">상태</a></th>
												<th id="approver"><a href="#" class="dataTable-sorter">결재자</a></th>
												<th id="approval-progress"><a href="#" class="dataTable-sorter">결재 진행상태</a></th>
											</tr>
										</thead>
										<tbody id="draftDocumentsContainer">
										</tbody>
									</table>
								</div>
							</div>
						</div>
				</section>
			</div>
		</section>
	</div>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal__" tabindex="-1"
	aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="exampleModalLabel">출퇴근 QR</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal"
					aria-label="Close"></button>
			</div>
			<div class="modal-body"></div>
		</div>
	</div>
</div>

<!-- Simple DataTables 스크립트 -->
<!-- ✅ Chart.js 먼저 로드 -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0"></script>

<script
	src="${pageContext.request.contextPath}/resources/js/content/chart.js"></script>
<script
	src="${pageContext.request.contextPath}/resources/js/content/appMain.js"></script>
<script
	src="https://cdn.jsdelivr.net/npm/sockjs-client@1/dist/sockjs.min.js"></script>
<script
	src="https://cdn.jsdelivr.net/npm/sockjs-client@1/dist/sockjs.min.js"></script>
<script
	src="https://cdn.jsdelivr.net/npm/stompjs@2.3.3/lib/stomp.min.js"></script>
<script
	src="${pageContext.request.contextPath}/resources/js/qr/qrModal.js"></script>
<script
	src="${pageContext.request.contextPath}/resources/js/content/updateTime.js"></script>
<script
	src="${pageContext.request.contextPath}/resources/js/content/updateWorkedTime.js"></script>
<script
	src="${pageContext.request.contextPath}/resources/js/qr/qrWorkStatusUpdate.js"></script>
<script
	src="${pageContext.request.contextPath}/resources/js/test.js"></script>
<script>
	var empId = '${principal.realUser.empId}'; //로그인한 사원의 Id
	console.log("empId",empId)
   //페이지가 로드되면 시간을 업데이트하고, 1초마다 갱신
   window.onload = function() {
      updateTime();
      updateWorkedTime();   // 페이지 로드 시 바로 실행
      setInterval(updateTime, 1000); // 1초마다 시간 갱신
      setInterval(updateWorkedTime, 1000);
      connectAndSendStatus();
      employeeCount();
   };

   function navigateToDetail(postId) {
       window.location.href = "${pageContext.request.contextPath}/board/detail?noticeId=" + postId;
   }

   function updateWorkStatus() {
		var statusId = $('#workStatusSelect').val();  // 선택된 상태 ID
		$.ajax({
			url: '/workstauts/updateWorkStatus',  // 서버의 URL
			type: 'POST',
			data: {
				statusId: statusId,
				empId: empId,
				workDate: workDate
			},
			success: function(response) {
				alert('업데이트 성공');
			},
			error: function() {
				alert('업데이트 실패');
			}
		});
	}
   let stompClient = null;

   function connectAndSendStatus() {
       const socket = new SockJS('/wss');
       stompClient = Stomp.over(socket);

       stompClient.connect({}, function(frame) {
           console.log('🟢 WebSocket 연결됨 (로그인 상태 알림용)', frame);

           // 온라인 상태 서버에 전송
           stompClient.send("/app/status", {}, JSON.stringify({
               empId: empId,
               status: "온라인"
           }));
       });
   }

   function logoutStatus() {
   	if (stompClient) {
   		stompClient.send("/app/status", {}, JSON.stringify({
   			empId: empId,
   			status: "오프라인"
   		}));
   	}
   	setTimeout(() => {
   		location.href = "/account/login/logout";
   	}, 300);
   }

   var scheduleList = [];
   <c:if test="${not empty scheduleList}">
       <c:forEach items="${scheduleList}" var="x">
           scheduleList.push({
               empId: "${x.empId}",
               scheduleTitle: "${x.scheduleTitle}",
               scheduleContext: "${x.scheduleContext}",
               startDate: "${x.startDate}",
               endDate: "${x.endDate}",
               scheduleVisibility: "${x.scheduleVisibility}",
               colorCode: "${x.colorCode}"
           });
       </c:forEach>
   </c:if>;

   function employeeCount() {

	   $.ajax({
		    url: "/employee/count",
		    type: "GET",
		    dataType: "json", // 응답 데이터 타입을 JSON으로 지정
		    success: function(data) {
		        $("#empCount").text(data.empCount);
		        $("#resignCount").text(data.resignCount);
		        $("#hireCount").text(data.hireCount);
		    },
		    error: function(xhr, status, error) {
		        console.log("Error: " + error);
		    }
		});
	}


</script>
