/** 
 * <pre>
 * << 개정이력(Modification Information) >>
 *   
 *   수정일      			수정자           수정내용
 *  -----------   	-------------    ---------------------------
 * 2025. 4. 1.     	youngjun            최초 생성
 *
 * </pre>
 */
let allStatus = false;

function allSuccess(obj){
	
	const selectedDate = document.querySelector("#payDate").value;
	const [selectYear, selectMonth] = selectedDate.split("-");
	
	const rows = document.querySelectorAll("#table1 tbody tr");
	const salaryList = [];
	console.log("confirmCount확정인원 확인", confirmCount);
	
	rows.forEach(row => {
		const salaryBtn = row.querySelector("button[onclick*='salaryFinal']");
		const status = salaryBtn?.innerText.trim();

		const empId = row.querySelector("td[data-salaryid]")?.textContent.trim();
		const salaryId = row.querySelector("td[data-salaryid]")?.getAttribute("data-salaryid");
		
		console.log("empId",empId);
		console.log("salaryId",salaryId);
		
		if (!allStatus && status === "확정대기") {
			if (empId && salaryId) {
				salaryList.push({ empId, salaryId });
			}
		}

		if (allStatus && status === "확정") {
			if (empId && salaryId) {
				salaryList.push({ empId, salaryId });
			}
		}
	});

	if (salaryList.length === 0) {
		alert(allStatus ? "확정취소 대상이 없습니다." : "확정할 대상이 없습니다.");
		return;
	}

	const param = {
	   salaryList : salaryList,
	   payYear:selectYear,
	   payMonth:selectMonth
	};


   $.ajax({
      url: `/salary/final/all?payYear=${selectYear}&payMonth=${selectMonth}`,  // 쿼리스트링으로 추가
      type: "POST",
      contentType: "application/json",
      data: JSON.stringify(param),
      success: function (res) {
         console.log("일괄시 카운트",res.finalCount);
         document.querySelector("#confirmCount").innerText = `${res.finalCount}명`;
         
         alert(allStatus ? "일괄 확정취소 완료" : "일괄 확정 완료");
         allStatus = !allStatus;
         obj.innerText = allStatus ? "일괄취소" : "일괄확정";

         salaryList.forEach(item => {
            const row = [...rows].find(r => r.querySelector("td[data-salaryid]")?.getAttribute("data-salaryid") === item.salaryId);
            const btn = row?.querySelector("button[onclick*='salaryFinal']");
            const dateDiv = row?.querySelector(".confirm-date");

            if (btn) {
               btn.innerText = allStatus ? "확정": "확정대기";
               btn.classList.toggle("btn-danger", allStatus);
               btn.classList.toggle("btn-primary", !allStatus);
            }

            if (dateDiv) {
               dateDiv.innerText = allStatus ? new Date().toISOString().split("T")[0] : "";
            }
         });
      
      },
      error: function () {
         alert("일괄 처리 실패");
      }
   });
}

let targetFinalButton = null;
let targetFinalInfo = {};

//  단건 확정 버튼 클릭 시 - 모달 준비
function salaryFinal(button) {
  const tr = button.closest("tr");

  const empId = tr.querySelector("td[data-salaryid]")?.textContent.trim();
  const salaryId = tr.querySelector("td[data-salaryid]")?.getAttribute("data-salaryid");
  const netSalary = parseInt(tr.querySelector("td:nth-child(11)")?.innerText.replace(/,/g, "") || 0);
  const payStatus = button.innerText.trim();

  const requestBtn = tr.querySelector("button[onclick*='salaryRequest']");
  const requestStatus = requestBtn?.innerText.trim();

  if (payStatus === "확정" && requestStatus === "요청완료") {
    alert("확정취소 불가: 요청완료된 항목입니다.");
    return;
  }

  // 대상 저장
  targetFinalButton = button;
  targetFinalInfo = { empId, salaryId, payStatus };

  // 모달 내용 설정
  document.getElementById("modalEmpCount").innerText = 1;
  document.getElementById("modalTotalAmount").innerText = netSalary.toLocaleString();

  const modal = new bootstrap.Modal(document.getElementById("confirmModal"));
  modal.show();

  // "확정 진행" 버튼 이벤트 연결
  document.getElementById("confirmAllFinal").onclick = doFinalSingle;
}

//  단건 확정 실제 실행
function doFinalSingle() {
  const btn = targetFinalButton;
  const { empId, salaryId, payStatus } = targetFinalInfo;
  const afterStatus = payStatus === "확정" ? "확정대기" : "확정";

  $.ajax({
    url: "/salary/final",
    type: "POST",
    data: { empId, salaryId },
    success: function (res) {
      if (res.cnt === "1") {
        // 버튼 상태 반영
        btn.innerText = afterStatus;
        btn.classList.toggle("btn-danger", afterStatus === "확정");
        btn.classList.toggle("btn-outline-primary", afterStatus === "확정대기");

        // 확정일 반영
        const dateDiv = btn.closest("td")?.querySelector(".confirm-date");
        dateDiv.innerText = res.finalDate ?? "";

        // 상단 카운트 업데이트
        document.getElementById("confirmCount").innerText = `${res.finalCount}명`;

        // 토스트 메시지
        showToast("✅ 확정되었습니다.");

        // 모달 닫기
        const modalEl = document.getElementById("confirmModal");
        const modalInstance = bootstrap.Modal.getOrCreateInstance(modalEl);
        modalInstance.hide();
      } else {
        alert("처리 중 오류가 발생했습니다.");
      }
    },
    error: function () {
      alert("서버 통신 실패");
    }
  });
}

//  공통 토스트 메시지 함수
function showToast(msg) {
  const container = document.getElementById("toastArea");
  container.innerHTML = `
    <div class="toast align-items-center text-bg-success border-0 show" role="alert">
      <div class="d-flex">
        <div class="toast-body">${msg}</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
      </div>
    </div>
  `;
  const toastEl = container.querySelector(".toast");
  const bsToast = new bootstrap.Toast(toastEl);
  bsToast.show();
}





//확정 단건 토글
function finalStatus(obj){
	let final_before = obj.innerHTML;
	console.log(final_before);
	
	let final_after="";
	const tr = obj.closest("tr");
	console.log("tr값?",tr)
	const empId = tr.querySelector("td[data-salaryid]").textContent.trim();
	const salaryId = tr.querySelector("td[data-salaryid]").getAttribute("data-salaryid");
	console.log("empId값?",empId)
	console.log("salaryId값?",salaryId)
	
	const payYear = document.getElementById("payDate").value.split("-")[0]; // yyyy-mm
	const payMonth = document.getElementById("payDate").value.split("-")[1];
	const date = `${payYear}-${payMonth}-01`;
	
	if(final_before ==="요청대기") {
		final_after="요청완료"
		obj.classList.remove("btn-primary");
		obj.classList.add("btn-danger");
	}else{
		final_after="요청대기";
		obj.classList.remove("btn-danger");
		obj.classList.add("btn-primary");
	}
	
	const currentTd = obj.closest("td");
	const nextTd = currentTd.nextElementSibling;
	
	$.ajax({
		url:"/salary/status",
		type:"POST",
		data:{
			empId:empId,
			salaryId:salaryId,
			payYear:payYear,
			payMonth:payMonth,
			date:date
		},
		success:function(res){
			console.log("요청인원",res.requestCount);
			console.log("요청일",res.requestDate);
		}
	})
}


function finalSummary(){
	console.log("여기오나?? 파이널");
	$.ajax({
		url:"/salary/summary",
		type:"GET",
		//data : SYSDATE
		success:function(res){
			console.log("res값확인",res);
		}
	})
}



