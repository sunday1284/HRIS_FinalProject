<!-- 
 * == 개정이력(Modification Information) ==
 *   
 *   수정일      			수정자           수정내용
 *  ============   	============== =======================
 *  2025. 3. 29.     	정태우            최초 생성
 *
-->
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link
	href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap"
	rel="stylesheet">

<style>
#annualHL{
	text-align: center;
}
body {
	font-family: 'Roboto', sans-serif;
	margin: 0;
	padding: 0;
	background-color: #f4f6f9;
}

.container {
	width: 100%;
	max-width: 1600px;
	margin: auto;
	padding: 30px;
	background: white;
	box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
	border-radius: 12px;
}

h2 {
	text-align: center;
	font-weight: 700;
	margin-bottom: 30px;
	color: #333;
}

.summary {
	display: flex;
	justify-content: space-between;
}

.card {
	color: black;
	border-radius: 8px;
	font-size: 18px;
	font-weight: bold;
	width: 30%;
	text-align: center;
	box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
}

.card span {
	display: block;
	font-size: 22px;
}

.accordion {
	display: flex;
	justify-content: space-between;
	gap: 20px;
	margin-bottom: 30px;
}

table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 10px;
    table-layout: auto;  /* 자동 크기 조정: th는 가운데, td는 왼쪽 정렬 유지 */
}

th, td {
    padding: 12px;
    border-bottom: 1px solid #ddd;
    white-space: nowrap; /* 줄바꿈 방지 */
}
#xx{
	text-align: center;  
}
th {
    background-color: #f1f1f1;
    text-align: center;  /* th는 가운데 정렬 */
}

td {
    text-align: center;  /* td는 왼쪽 정렬 */
}

tr:hover {
    background-color: #f9f9f9;
}

</style>
<h3>연차 내역</h3>
<div class="container">

	<h5>
		${employee.department.departmentName }
		${employee.team.teamName}
		${employee.name}
		${employee.rank.rankName}
	</h5>
			<input type="hidden" value="${employee.empId}" id="empId" /> 
	<h2>
		<span id="currentYear"></span>
	</h2>

	<div class="summary">
		<div class="card">
			총 연차: <span id="yearTotalAnnual"> ${annualCount.totalAnnual}</span>
		</div>
		<div class="card">
			사용 연차: <span id="userAnnual"> ${annualCount.usedAnnual}</span>
		</div>
		<div class="card">
			잔여 연차: <span id="remainAnnual"> ${annualCount.remainingAnnual}</span>
		</div>
	</div>
</div>

<div class="container">
<div>
연차 사용 기간 :
	 <select id="yearSelect" onchange="changeYear()">
        <!-- 동적으로 생성될 연도 옵션이 여기에 추가됩니다. -->
    </select>
    <h5 id="annualHL">사용 내역</h5>
</div>
<hr>
	<div class="accordion" id="weeksAccordion">
		<table>
			<thead>
				<tr>
					<th>유형</th>
					<th>기간</th>
					<th>사용 일수</th>
					<th>사유</th>
				</tr>
			</thead>
			<tbody id="annualData">
			</tbody>
		</table>
	</div>
</div>

<script>
// 현재 연도를 기준으로 10년 전까지 연도 옵션을 동적으로 생성하는 함수
let HY = "${employee.hireDate}".trim(); // 공백 제거

function generateYearOptions() {
    let selectElement = document.getElementById('yearSelect');
    let currentYear = new Date().getFullYear(); // 현재 연도 가져오기

    let hireDateStr = HY.split(" ")[0]; // "2023-08-22"만 추출
    let hireDate = new Date(hireDateStr); // Date 객체로 변환
    let hireYear = hireDate.getFullYear(); // 입사 연도 가져오기

    selectElement.innerHTML = ""; // 기존 옵션 초기화

    // 입사 연도부터 현재 연도까지 옵션 추가
    for (let year = currentYear; year >= hireYear; year--) {
        let option = document.createElement('option');
        option.value = year;
        option.textContent = `\${year}-01-01 ~ \${year}-12-31`; // 옵션 텍스트

        if (year === currentYear) {
            option.selected = true; // 현재 연도를 기본 선택으로 설정
        }

        selectElement.appendChild(option); // select 요소에 옵션 추가
    }

    changeYear();
}

//연차 데이터 업데이트 함수
function updateAnnualSummary(year) {
    let empId = document.getElementById('empId').value;

    $.ajax({
        url: '/MyAnnual',
        type: 'GET',
        data: { date: year, empId: empId },
        dataType: "json",
        success: function(data) {

            let dd = data.annualDetail;
            let tableBody = document.getElementById("annualData");
            tableBody.innerHTML = "";
            
            let annualDataHTML = '';
            // 연차 내역이 없을 때 처리
            if (dd && dd.length === 0 ) {
                annualDataHTML += `
                    <tr>
                        <td id="xx" colspan="4">연차 내역이 없습니다</td>
                    </tr>
                `;
                tableBody.innerHTML = annualDataHTML;
                return; // 데이터가 없을 경우 처리 후 종료
            }
            
            dd.forEach(function(item) {

                let formattedLeaveDate = item.leaveDate.split(' ')[0];
                let formattedLeaveEndDate = item.leaveEndDate.split(' ')[0];

                annualDataHTML += `
                    <tr>
                        <td>\${item.annualType.annualName || 'N/A'}</td>
                        <td>\${formattedLeaveDate} ~ \${formattedLeaveEndDate}</td>
                        <td>\${item.leaveDay || '0'}</td>
                        <td>\${item.reason || '없음'}</td>
                    </tr>
                `;
            });

            // ✅ 테이블에 데이터 삽입
            tableBody.innerHTML = annualDataHTML;
        },
        error: function(xhr, status, error) {
            console.error("연차 내역 로딩 실패:", error);
        }
    });
}

// 연도 변경 시 호출되는 함수
function changeYear() {
    let selectedYear = document.querySelector("#yearSelect").value;
    document.querySelector("#currentYear").innerText = selectedYear;
    updateAnnualSummary(selectedYear);
}

// 초기 페이지 로드 시 현재 연도로 연차 내역을 업데이트
document.addEventListener('DOMContentLoaded', function() {
    let selectedYear = document.querySelector("#yearSelect").value;
    document.querySelector("#currentYear").innerText = selectedYear;
    generateYearOptions();
    updateAnnualSummary(selectedYear);
});


</script>

