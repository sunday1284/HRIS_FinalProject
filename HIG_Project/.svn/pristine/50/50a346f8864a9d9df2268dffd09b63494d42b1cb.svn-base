<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="kr.or.ddit.mybatis.mappers.contract.ContractMapper">

	<resultMap type="contractVO" id="ContractResultMap"
		autoMapping="true">
		<id property="contractId" column="CONTRACT_ID" />
		<association property="employee" javaType="EmployeeVO"
			autoMapping="true">
			<id property="empId" column="EMP_ID" />
			<result property="name" column="NAME" />
		</association>
	</resultMap>

	<!-- 모든 근로계약서 조회 -->
	<select id="contractList" resultMap="ContractResultMap">
		SELECT C.CONTRACT_ID,
		C.EMP_ID, C.CONTRACT_TYPE, C.START_DATE, C.END_DATE,
		C.WORK_TYPE,
		C.BASE_SALARY, C.OVERTIME_PAY, C.WEEKLY_HOURS,
		C.CONTRACT_STATUS,
		C.CREATE_AT, C.WORK_PLACE, C.TRANSPORT_ALLOWANCE,
		C.FOOD_ALLOWANCE,
		C.POSITION_ALLOWANCE, S.SIGN_IMAGE_PATH, E.NAME
		FROM EMP_CONTRACT C
		LEFT JOIN EMPLOYEE E ON C.EMP_ID = E.EMP_ID
		LEFT JOIN SIGNATURE S ON
		C.SIGN_ID = S.SIGN_ID
		ORDER BY C.CREATE_AT DESC
	</select>

	<!-- 근로계약서 조회 시 서명 이미지 포함 -->
	<select id="selectContractSign" resultMap="ContractResultMap">
		SELECT C.CONTRACT_ID,
		C.EMP_ID, C.CONTRACT_TYPE, C.START_DATE, C.END_DATE,
		C.WORK_TYPE,
		C.BASE_SALARY, C.OVERTIME_PAY, C.WEEKLY_HOURS,
		C.CONTRACT_STATUS,
		C.CREATE_AT, C.WORK_PLACE, C.TRANSPORT_ALLOWANCE,
		C.FOOD_ALLOWANCE,
		C.POSITION_ALLOWANCE, C.SIGN_ID, S.SIGN_IMAGE_PATH, E.NAME
		FROM
		EMP_CONTRACT C
		LEFT JOIN SIGNATURE S ON C.SIGN_ID = S.SIGN_ID
		LEFT JOIN
		EMPLOYEE E ON C.EMP_ID = E.EMP_ID
		WHERE C.EMP_ID = #{empId}
	</select>

	<!-- 내 근로계약서 조회 -->
	<select id="selectMyContract" resultMap="ContractResultMap">
		SELECT C.CONTRACT_ID,
		C.EMP_ID, C.CONTRACT_TYPE, C.START_DATE, C.END_DATE,
		C.WORK_TYPE,
		C.BASE_SALARY, C.OVERTIME_PAY, C.WEEKLY_HOURS,
		C.CONTRACT_STATUS,
		C.CREATE_AT, C.WORK_PLACE, C.TRANSPORT_ALLOWANCE,
		C.FOOD_ALLOWANCE,
		C.POSITION_ALLOWANCE, C.SIGN_ID, S.SIGN_IMAGE_PATH, E.NAME
		FROM
		EMP_CONTRACT C
		LEFT JOIN EMPLOYEE E ON C.EMP_ID = E.EMP_ID
		LEFT JOIN
		SIGNATURE S ON C.SIGN_ID = S.SIGN_ID
		WHERE C.EMP_ID = #{empId}
	</select>

	<!-- 근로계약서 서명시 근로계약 상태 업데이트 -->
	<update id="updateContractSign">
		UPDATE EMP_CONTRACT
		SET SIGN_ID = #{signId},
		CONTRACT_STATUS = '유효'
		WHERE CONTRACT_ID = #{contractId}
	</update>

	<!-- 근로계약서가 없는 사원 조회 -->
	<select id="unContractList" resultType="EmployeeVO">
		SELECT E.EMP_ID, E.NAME
		FROM EMPLOYEE E
		LEFT JOIN EMP_CONTRACT C ON E.EMP_ID = C.EMP_ID
		WHERE
		C.EMP_ID IS NULL
	</select>

	<!-- 특정 사원의 근로계약서 조회 -->
	<select id="selectContract" resultMap="ContractResultMap">
		SELECT C.CONTRACT_ID,
		C.EMP_ID, C.CONTRACT_TYPE, C.START_DATE, C.END_DATE,
		C.WORK_TYPE,
		C.BASE_SALARY, C.OVERTIME_PAY, C.WEEKLY_HOURS,
		C.CONTRACT_STATUS,
		C.CREATE_AT, C.WORK_PLACE, C.TRANSPORT_ALLOWANCE,
		C.FOOD_ALLOWANCE,
		C.POSITION_ALLOWANCE, C.SIGN_ID, S.SIGN_IMAGE_PATH, E.NAME
		FROM
		EMP_CONTRACT C
		LEFT JOIN EMPLOYEE E ON C.EMP_ID = E.EMP_ID
		LEFT JOIN
		SIGNATURE S ON C.SIGN_ID = S.SIGN_ID
		WHERE C.EMP_ID = #{empId}
		ORDER BY
		C.CREATE_AT DESC
	</select>

	<!-- 근로계약서 등록 -->
	<insert id="insertContract" parameterType="ContractVO">
		INSERT INTO
		EMP_CONTRACT (
		CONTRACT_ID, EMP_ID, CONTRACT_TYPE, START_DATE,
		END_DATE,
		BASE_SALARY, POSITION_ALLOWANCE, TRANSPORT_ALLOWANCE,
		FOOD_ALLOWANCE,
		WORK_TYPE, WEEKLY_HOURS, CONTRACT_STATUS, WORK_PLACE,
		CREATE_AT, ANNUAL_SALARY
		)
		VALUES (
		CONTRACT_SEQ.NEXTVAL, #{empId},
		#{contractType}, #{startDate}, #{endDate},
		#{baseSalary},
		#{positionAllowance}, #{transportAllowance}, #{foodAllowance},
		#{workType}, #{weeklyHours}, #{contractStatus}, #{workPlace}, SYSDATE,
		#{annualSalary}
		)
	</insert>

	<!-- 자동 급여 계산용 -->
	<select id="selectAutoSalaryByEmpId" resultType="ContractVO">
		SELECT
		#{empId} AS empId,
		'정규직' AS contractType,
		E.HIRE_DATE AS startDate,
		ADD_MONTHS(E.HIRE_DATE, 12) AS endDate,
		S.BASE_SALARY,
		S.DUTY_ALLOWANCE AS positionAllowance,
		S.TRANSPORT_ALLOWANCE AS transportAllowance,
		S.MEAL_ALLOWANCE AS foodAllowance,
		'풀타임' AS workType,
		40 AS weeklyHours,
		'대기' AS contractStatus,
		(S.BASE_SALARY + NVL(S.DUTY_ALLOWANCE,0) + NVL(S.TRANSPORT_ALLOWANCE,0) +
		NVL(S.MEAL_ALLOWANCE,0)) * 12 AS annualSalary
		FROM EMPLOYEE E
		JOIN DEPARTMENT D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
		JOIN RANK R ON E.RANK_ID = R.RANK_ID
		JOIN JOB J ON E.JOB_ID = J.JOB_ID
		JOIN SALARY_STANDARDS S
		ON S.DEPARTMENT_NAME = D.DEPARTMENT_NAME
		AND S.RANK_NAME = R.RANK_NAME
		AND S.JOB_NAME = J.JOB_NAME
		WHERE E.EMP_ID = #{empId}
	</select>

</mapper>