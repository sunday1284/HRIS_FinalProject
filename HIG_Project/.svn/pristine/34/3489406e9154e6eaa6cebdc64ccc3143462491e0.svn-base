<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>
<%@taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>

<!-- Bootstrap & Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

<!-- DataTables -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>

<!-- Chart.js CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>

<!-- 스타일 -->
<style>
  body {
    padding: 40px;
    background-color: #f8f9fa;
    font-family: 'Segoe UI', 'Malgun Gothic', sans-serif;
  }
  h3 {
    margin-bottom: 25px;
    font-weight: 600;
  }
  .table th, .table td {
    text-align: center;
    vertical-align: middle !important;
    padding: 10px;
    font-size: 15px;
    line-height: 1.6;
    white-space: nowrap;
    
  }
  .table thead th {
    text-align: center !important;
    background-color: #eff6ff;
    font-weight: 600;
    color: #0d47a1;
    border-top: 2px solid #c6dafc;
    white-space: nowrap;
  }
  .table-hover tbody tr:hover {
    background-color: #e3f2fd;
  }
  .btn-link-group {
    margin-bottom: 20px;
    display: flex;
    justify-content: flex-end;
    gap: 10px;
  }
</style>

<script
	src="${pageContext.request.contextPath}/resources/js/employee/empDetail.js"></script>

<div class="page-container container-fluid">
	<div class="d-flex justify-content-between align-items-center mb-2">

		<!-- 좌측: 버튼 그룹 -->
		<div>
			<button type="button" class="btn btn-outline-secondary"
				onclick="history.back();">
				<i class="fas fa-arrow-left"></i>
			</button>
		</div>

		<!-- 우측: Breadcrumb -->
		<nav aria-label="breadcrumb">
			<ol class="breadcrumb mb-0">
				<li class="breadcrumb-item fw-bold text-primary"><a
					href="${pageContext.request.contextPath }/account/login/home">📌Main</a></li>
				<li class="breadcrumb-item active" aria-current="page">직원관리</li>
				<li class="breadcrumb-item"><a href="${pageContext.request.contextPath }/employee/appointList">인사발령</a></li>
				<li class="breadcrumb-item"><a href="${pageContext.request.contextPath }/employee/resignList">퇴사자관리</a></li>
			</ol>
		</nav>

	</div>
</div>
<br />

<h3>직원관리</h3>
<div class="row">
	<!-- 왼쪽 카드 -->
	<div class="col-md-6">
		<div class="card h-100" style="min-height: 500px;">
			<div class="card-body">
				<div class="chart-container text-center" style="height: 90%;">
					<h4>📥 근속 연수</h4>
					<canvas id="tenure"
						style="display: block; margin: 0 auto; width: 100%; max-width: 650px; height: 400px;"></canvas>
				</div>
			</div>
		</div>
	</div>

	<!-- 오른쪽 카드 -->
	<div class="col-md-6">
		<div class="card h-100" style="min-height: 550px;">
			<div class="card-body">
				<div class="chart-container text-center" style="height: 100%;">
					<h4>💼 직급별 비율</h4>
					<canvas id="rankPercent"
						style="display: block; margin: 0 auto; width: 100%; max-width: 500px; height: 400px;"></canvas>
				</div>
			</div>
		</div>
	</div>
</div>
<br />

<!-- 🔗 링크 버튼 -->
<div class="btn-link-group">
  <a href="${pageContext.request.contextPath}/employee/empFormUI" class="btn btn-primary">
    <i class="bi-person-plus"></i> 신규직원등록
  </a>
  <a href="${pageContext.request.contextPath}/employee/appointList" class="btn btn-primary">
    <i class="bi-person-check"></i> 인사발령 이동
  </a>
  <a href="${pageContext.request.contextPath}/employee/resignList" class="btn btn-outline-danger">
    <i class="bi-person-dash"></i> 퇴사자 관리 이동
  </a>
</div>

<div class="card">
	<div class="card-body">
	<h4>직원정보 리스트</h4>
		<table class="table table-striped table-bordered table-hover" id="empTable">
			<thead>
				<tr>
					<th>프로필</th>
					<th>이름</th>
					<th>사번</th>
					<th>휴대폰</th>
					<th>이메일</th>
					<th>부서명</th>
					<th style="width: 50px;">팀명</th>
					<th>직급</th>
					<th>직책</th>
					<th>직무</th>
					<th>입사일자</th>
					<th>인사기록카드</th>
				</tr>
			</thead>
			<tbody>
				<c:forEach items="${empList}" var="x">
					<c:set var="fullPath" value="${x.empPath}" />
					<c:set var="startIndex"
						value="${fn:indexOf(fullPath, 'fileImages')}" />
					<c:set var="cutStart" value="${startIndex + 10}" />
					<c:set var="cutEnd" value="${fn:length(fullPath)}" />
					<c:set var="fileName"
						value="${fn:substring(fullPath, cutStart, cutEnd)}" />
					<c:set var="webPath" value="/resources/fileImages/${fileName}" />
					<tr>
						<td><img src="${pageContext.request.contextPath}${webPath}"
							style="width: 40px; height: 40px; object-fit: cover; border-radius: 4px;"
							onerror="this.onerror=null; this.src='${pageContext.request.contextPath}/resources/template/dist/assets/static/images/faces/1.jpg';"
							alt="프로필" /></td>
						<td>${x.name }</td>
						<td>${x.empId }</td>
						<td>${x.phoneNumber }</td>
						<td>${x.email }</td>
						<td>${x.department.departmentName }</td>
						<td>${x.team.teamName }</td>
						<td>${x.rank.rankName }</td>
						<td>${x.job.jobName }</td>
						<td>${x.position.positionName }</td>
						<td><fmt:parseDate value="${x.hireDate}"
								pattern="yyyy-MM-dd HH:mm:ss" var="parsedHireDate" /> <fmt:formatDate
								value="${parsedHireDate}" pattern="yyyy-MM-dd" /></td>
						<td>
							<button type="button" class="btn btn-primary"
								data-bs-toggle="modal" data-bs-target="#exampleModal1"
								data-emp-id="${x.empId}">열람</button>
						</td>
					</tr>
				</c:forEach>
			</tbody>
		</table>
		<br> <br>
		
		<!-- Modal -->
		<div class="modal fade" id="exampleModal1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
			<div class="modal-dialog modal-lg modal-dialog-scrollable">
				<div class="modal-content">
					<div class="modal-header">
						<h1 class="modal-title fs-5" id="exampleModalLabel">인사기록카드</h1>
						<button type="button" class="btn-close" data-bs-dismiss="modal"
							aria-label="Close"></button>
					</div>
					<div class="modal-body" style="max-width: 1000px;"></div>
					<div class="modal-footer">
					  <div class="btn-area">
					    <a class="btn btn-primary" href="${empUpdate}">
					      <i class="bi bi-pencil-square me-1"></i>정보 수정
					    </a>
					  </div>
						<button type="button" class="btn btn-secondary" id="closeButton"
							data-bs-dismiss="modal">닫기</button>
					</div>
				</div>
			</div>
		</div>
		
	</div>
</div>
<script>
document.addEventListener('DOMContentLoaded', function() {
	const today = new Date();
	const year = today.getFullYear();
	
	$.ajax({
		url: "/employee/rankPercent",
		type: "GET",
		success: function(data) {
			rankPercent(data);		
		},
		error: function() {
			alert("요약 정보 조회 실패");
		}
	});
	
	$.ajax({
		url: "/employee/tunurePercent",
		type: "GET",
		success: function(data) {
 			tenure(data);		
		},
		error: function() {
			alert("요약 정보 조회 실패");
		}
	});
});	

	Chart.register(ChartDataLabels);
	// 직급별 인원수 비율
function rankPercent(data) {
	const total = data.reduce((sum, item) => sum + item.COUNT, 0);

	const labels = data.map(item => item.RANK_NAME);
	const percentages = data.map(item => ((item.COUNT / total) * 100).toFixed(1));
	const rawCounts = data.map(item => item.COUNT);

	const backgroundColors = [
		'#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0',
		'#9966FF', '#FF9F40', '#C9CBCF', '#5AD3D1'
	];

	new Chart(document.getElementById('rankPercent'), {
		type: 'doughnut',
		data: {
			labels: labels,
			datasets: [{
				label: '직급 비율',
				data: rawCounts,
				backgroundColor: backgroundColors,
				borderWidth: 1
			}]
		},
		options: {
			responsive: true,
			plugins: {
				legend: {
					position: 'bottom',
					labels: {
						filter: function(legendItem, chartData) {
							const index = legendItem.index;
							const value = parseFloat(chartData.datasets[0].data[index]);
							// ✅ 퍼센트 5% 미만인 항목만 레전드에 표시
							return value < 5;
						}
					}
				},
				tooltip: {
					callbacks: {
						label: function(context) {
							const index = context.dataIndex;
							const count = rawCounts[index];
							const percentage = percentages[index];
							return `\${context.label}: \${count}명`;
						}
					}
				},
				datalabels: {
					anchor: 'center',
					align: 'center',
					display: function(context) {
						const value = parseFloat(context.dataset.data[context.dataIndex]);
						return value >= 5; // ✅ 5% 이상만 라벨로
					},
					formatter: function(value, context) {
						const percent = ((value / total) * 100).toFixed(1);
						return `\${context.chart.data.labels[context.dataIndex]}\n\${percent}%`;
					},
					color: '#000',
					font: {
						weight: 'bold',
						size: 17
					}
				}
			}
		},
		plugins: [ChartDataLabels]
	});
}

//근속 연수별 인원수 비율 - 수평 막대 그래프
function tenure(deptData) {
	const labels = deptData.map(item => {
		if (item.TENUREYEAR < 0) return '입사예정';
		else return `\${item.TENUREYEAR}년`;
	});

	const data = deptData.map(item => item.COUNT);
	const total = data.reduce((sum, val) => sum + val, 0);

	const backgroundColors = [
		'#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0',
		'#9966FF', '#FF9F40', '#C9CBCF', '#5AD3D1',
		'#B39DDB', '#FFCDD2', '#AED581', '#81D4FA'
	];

	new Chart(document.getElementById('tenure'), {
		type: 'bar',
		data: {
			labels: labels,
			datasets: [{
				label: '근속 연수별 인원 수',
				data: data,
				backgroundColor: backgroundColors,
			}]
		},
		options: {
			indexAxis: 'y', // 👈 수평 막대 그래프로 만드는 핵심 옵션
			responsive: true,
			plugins: {
				legend: {
					display: false // 막대그래프는 범례 필요 없으면 끄는 것도 깔끔함
				},
				tooltip: {
					callbacks: {
						label: function(context) {
							const label = context.label || '';
							const value = context.raw;
							const percent = ((value / total) * 100).toFixed(1);
							return `\${label}: \${value}명`;
						}
					}
				},
				datalabels: {
					anchor: 'center',
					align: 'center',
					display: function(context) {
						const value = parseFloat(context.dataset.data[context.dataIndex]);
						return value >= 5; // 5명 이상일 때만 라벨 표시
					},
					formatter: function(value, context) {
						const percent = ((value / total) * 100).toFixed(1);
						const label = context.chart.data.labels[context.dataIndex];
						return `\${label}: \${percent}%`;
					},
					color: '#000',
					font: {
						weight: 'bold',
						size: 17
					}
				}
			},
			scales: {
				x: {
					beginAtZero: true,
					ticks: {
						stepSize: 5
					}
				}
			}
		},
		plugins: [ChartDataLabels]
	});
}
$(document).ready(function() {
    $('#empTable').DataTable({
      "language": {
        "search": "검색:",
        "lengthMenu": "_MENU_ 항목씩 보기",
        "info": "총 _TOTAL_명 중 _START_~_END_ 표시",
        "paginate": {
          "next": "다음",
          "previous": "이전"
        },
        "zeroRecords": "일치하는 직원이 없습니다.",
        "infoEmpty": "직원 없음",
        "infoFiltered": "(전체 _MAX_명 중 필터링됨)"
      },
      "pageLength": 10,
      "lengthMenu": [10, 20, 30, 50]
    });
  });

</script>

