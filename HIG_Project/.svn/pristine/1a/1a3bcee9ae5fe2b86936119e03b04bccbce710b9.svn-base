<%@ page contentType="text/html; charset=UTF-8" language="java" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>

<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8">
    <style>
        
        body {
            font-family: Arial, sans-serif; /* 기본 글꼴 설정 */
            margin: 0; /* body 기본 여백 제거 */
            display: flex;
            justify-content: center; /* 컨텐츠를 화면 가운데 정렬 */
            align-items: center;
            min-height: 100vh; /* 화면 높이를 가득 채우도록 설정 */
        }
        
        .container {
            display: grid;
            grid-template-columns: 0.35fr 0.65fr; /* 왼쪽 폼 35%, 오른쪽 리스트 65% 비율로 설정 */
            gap: 20px; /* 컬럼 간격 조정 */
            width: 90vw; /* 뷰포트 너비의 90% 사용 */
            max-width: 1500px; /* 최대 너비 제한 */
            background: white;
            padding: 20px;
            border-radius: 8px; /* 모서리 둥글게 */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 그림자 효과 추가 */
        }

        .form-section, .list-section {
            padding: 20px;
            border: 1px solid #ddd; /* 테두리 설정 */
            border-radius: 8px;
            background-color: #ffffff; /* 배경 흰색 */
        }
        
        .form-section h2, .list-section h2 {
            text-align: center; /* 제목 가운데 정렬 */
        }
        
        .form-group {
            margin-bottom: 15px; /* 각 입력 그룹 간 간격 설정 */
        }
        
        .form-group label {
            display: block; /* 블록 요소로 변경하여 줄바꿈 적용 */
            font-weight: bold; /* 글씨 굵게 */
        }
        
        .form-group input, .form-group textarea, .form-group select {
            width: 100%; /* 입력 요소 너비 100% 설정 */
            padding: 8px; /* 내부 여백 추가 */
            margin-top: 5px; /* 라벨과 입력 요소 간격 */
            border: 1px solid #ccc; /* 테두리 색상 지정 */
            border-radius: 5px; /* 모서리 둥글게 설정 */
        }
        
        .form-group input[type="number"] {
            width: 80px; /* 숫자 입력 필드 너비 제한 */
        }
        
        .button-group {
            text-align: center; /* 버튼 가운데 정렬 */
            margin-top: 20px; /* 위쪽 여백 설정 */
        }
        
        .button-group button {
            padding: 8px 15px; /* 버튼 내부 여백 설정 */
            margin: 5px; /* 버튼 간 간격 조정 */
            border: none; /* 테두리 제거 */
            border-radius: 5px; /* 모서리 둥글게 */
            cursor: pointer; /* 마우스 오버 시 커서 변경 */
        }
        
        .save-btn { background-color: #007bff; color: white; } /* 저장 버튼 스타일 */
        .reset-btn { background-color: #dc3545; color: white; } /* 초기화 버튼 스타일 */
        
        table {
            width: 100%; /* 테이블 너비 100% 설정 */
            border-collapse: collapse; /* 테두리 겹침 제거 */
            margin-top: 15px; /* 위쪽 여백 설정 */
        }
        
        th, td {
            border: 1px solid #ddd; /* 테두리 설정 */
            padding: 8px; /* 내부 여백 설정 */
            text-align: center; /* 텍스트 가운데 정렬 */
        }
        
        th {
            background-color: #007bff; /* 헤더 배경색 설정 */
            color: white; /* 헤더 글자색 설정 */
        }
        
        .delete-btn {
            background-color: #dc3545; /* 삭제 버튼 배경색 설정 */
            color: white;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
        }
        
        h2{
            margin-bottom : 40px; /* h2 아래 여백 설정 */
        }
        h5{
        	text-align: center; 
        }
    </style>
<script>
	// 리스트 불러오기
    // 입력값 검증 및 리스트에 추가
    function addEvaluation() {
        const id = document.getElementById("evaluaTypeId").value.trim();
        const rank = document.getElementById("rankId").value.trim();
        const name = document.getElementById("evaluaName").value.trim();
        const type = document.getElementById("evaluaType").value.trim();
        const criteria = document.getElementById("evaluaCriteria").value.trim();
        const weight = document.getElementById("evaluaWeight").value.trim();
        const comment = document.getElementById("evaluaComment").value.trim();

        if (!name || !type || !criteria || !weight) {
            alert("필수 입력 항목을 모두 입력하세요.");
            return;
        }

        const table = document.getElementById("evaluationTableBody");
        const newRow = table.insertRow();

        newRow.innerHTML = `
            <td>${id}</td>
            <td>${rank}</td>
            <td>${name}</td>
            <td>${type}</td>
            <td>${criteria}</td>
            <td>${weight}%</td>
            <td>${comment}</td>
            <td><button class="delete-btn" onclick="deleteRow(this)">삭제</button></td>
        `;

        // 입력 폼 초기화
        document.getElementById("evaluation-form").reset();
    }

	// 행 삭제 & DB삭제
    function deleteRow(button) {
        // 삭제할 행(tr) 요소 가져오기
        const row = button.closest("tr");

        // 삭제할 데이터의 ID 가져오기 (순번)
        const evaluaTypeId = row.cells[0].innerText.trim(); 

        if (!confirm("정말 삭제하시겠습니까?")) {
            return;
        }

        // AJAX 요청으로 서버에 삭제 요청 보내기
        fetch('/evaluation/evaluationTypeDelete', {
		    method: 'POST',
		    headers: {
		        'Content-Type': 'application/json'
		    },
		    body: JSON.stringify({
		        evaluTypeId: evaluaTypeId
		    })
		})
        .then(response => response.json())  // JSON 응답 처리
        .then(data => {
            if (data.success) {
                row.remove();  // 화면에서도 삭제
            } else {
                alert("삭제에 실패했습니다.");
            }
        })
        .catch(error => {
            console.error("삭제 요청 오류:", error);
            alert("서버 오류로 인해 삭제할 수 없습니다.");
        });
    }
    
    
</script>
</head>
<body>
<h2>KPI 목표 설정</h2>
<div class="container">
    <!-- 평가 기준 입력 폼 -->
    <div class="form-section">
        <h5>추가할 평가 정보를 입력해주세요</h5>
        <form id="evaluation-form" action="${pageContext.request.contextPath}/evaluation/evaluationTypeInsert" method="post">
		    <div class="form-group">
		        <label for="evaluaTypeId">순번</label>
		        <input type="number" id="evaluaTypeId" name="evaluaTypeId" required>
		    </div>
		    <div class="form-group">
		        <label for="rankId">평가대상</label>
		        <select id="rankId" name="rankId" required>
			        <option value="" disabled selected>선택하세요</option>
			        <option value="3000">사원</option>
			        <option value="3010">대리</option>
			        <option value="3020">과장</option>
			        <option value="3030">차장</option>
			        <option value="3040">부장</option>
			        <option value="3050">이사</option>
			        <option value="3060">상무</option>
			        <option value="3070">전무</option>
			        <option value="3080">부사장</option>
			        <option value="3090">사장</option>
			    </select>
		    </div>
		    <div class="form-group">
		        <label for="evaluaName">평가명</label>
		        <input type="text" id="evaluaName" name="evaluaName" required>
		    </div>
		
		    <div class="form-group">
		        <label for="evaluaType">평가 유형</label>
		        <input type="text" id="evaluaType" name="evaluaType" required>
		    </div>
		
		    <div class="form-group">
		        <label for="evaluaCriteria">평가 항목</label>
		        <input type="text" id="evaluaCriteria" name="evaluaCriteria" required>
		    </div>
		
		    <div class="form-group">
		        <label for="evaluaWeight">가중치 (%)</label>
		        <input type="number" id="evaluaWeight" name="evaluaWeight" min="0" max="100" required>
		    </div>
		
		    <div class="form-group">
		        <label for="evaluaComment">세부</label>
		        <textarea id="evaluaComment" name="evaluaComment" rows="3"></textarea>
		    </div>
		
		    <div class="button-group">
		        <button type="submit" class="save-btn">추가</button>
		        <button type="reset" class="reset-btn">초기화</button>
		    </div>
		</form>
    </div>

    <!-- 기존 평가 리스트 -->
    <div class="list-section">
        <h5>적용중인 KPI 목록</h5>
        <table>
            <thead>
                <tr>
                    <th>순번</th>
                    <th>평가대상</th>
                    <th>평가명</th>
                    <th>유형</th>
                    <th>항목</th>
                    <th>가중치</th>
                    <th>설명</th>
                    <th>삭제</th>
                </tr>
            </thead>
            <tbody id="evaluationTableBody">
                <c:forEach var="x" items="${evaluTypeList}">
                    <tr>
                        <td>${x.evaluaTypeId}</td>
                        <td>${x.rank.rankName }</td>
                        <td>${x.evaluaName}</td>
                        <td>${x.evaluaType}</td>
                        <td>${x.evaluaCriteria}</td>
                        <td>${x.evaluaWeight}%</td>
                        <td>${x.evaluaComment}</td>
                        <td><button class="delete-btn" onclick="deleteRow(this)">삭제</button></td>
                    </tr>
                </c:forEach>
            </tbody>
        </table>
    </div>
</div>

</body>
</html>
